
# Aplicación CRUD de PHP

Este repositorio contiene una aplicación PHP CRUD (Create, Read, Update, Delete) simple. Es una demostración básica de cómo integrar PHP con una base de datos MySQL para gestionar datos de usuarios. La aplicación permite a los usuarios agregar, ver, editar y eliminar información de usuario.

La introducción de una aplicación CRUD en PHP usualmente implica la integración de varios componentes clave:
Backend en PHP: PHP es un lenguaje de programación de servidor ampliamente utilizado en el desarrollo web. Se utiliza para manejar las solicitudes del cliente, procesar datos y generar respuestas dinámicas.
Base de Datos: Para almacenar y administrar datos, se utiliza un sistema de gestión de bases de datos (DBMS). En el contexto de PHP, se pueden utilizar varios DBMS populares, como MySQL, PostgreSQL o SQLite, entre otros.
Interfaz de Usuario (UI): La interfaz de usuario permite a los usuarios interactuar con la aplicación. En una aplicación CRUD típica, esto podría incluir formularios para agregar o editar datos, así como vistas para mostrar información existente.

Al integrar estos componentes, una aplicación CRUD en PHP proporciona una manera efectiva y eficiente de administrar datos en una base de datos. Desde aplicaciones de gestión de contenido hasta sistemas de gestión de inventario, las aplicaciones CRUD son una parte esencial del desarrollo web moderno.

Operaciones CRUD: Cada una de las operaciones CRUD tiene su propia función en la aplicación:

Create (Crear): Permite a los usuarios agregar nuevos registros a la base de datos.
Read (Leer): Facilita la visualización de datos existentes, ya sea en forma de listas o detalles de un solo registro.
Update (Actualizar): Permite a los usuarios modificar registros existentes en la base de datos.
Delete (Eliminar): Proporciona la funcionalidad para eliminar registros de la base de datos.
Seguridad: Es fundamental implementar medidas de seguridad para proteger la integridad de los datos y prevenir vulnerabilidades como inyecciones SQL y acceso no autorizado.

## Tecnologías Utilizadas

- **PHP:** Lenguaje de script del lado del servidor utilizado para el desarrollo web.
- **MySQL:** Sistema de gestión de base de datos utilizado para almacenar datos de usuario.
- **HTML & CSS:** Utilizados para estructurar y dar estilo a las páginas web.
- **Tailwind CSS:** Un framework de CSS utilitario para el desarrollo rápido de interfaces de usuario.

## Páginas y Funcionalidades

### 1. Página de Inicio (`display.php`)

![Página de Inicio](images/display.png)

- **Funcionalidad:** Muestra todos los usuarios de la base de datos en un formato de tabla.
- **Características:** 
  - Ver todos los usuarios.
  - Enlaces de navegación para agregar, editar o eliminar información de usuario.

### 2. Agregar Usuario (`user.php`)

![Agregar Usuario](images/add.png)

- **Funcionalidad:** Permite agregar un nuevo usuario a la base de datos.
- **Características:** 
  - Formulario para ingresar detalles del usuario (nombre, correo electrónico, teléfono móvil, contraseña).
  - Validación de datos y envío a la base de datos.

### 3. Editar Usuario (`edit.php`)

![Editar Usuario](images/edit.png)

- **Funcionalidad:** Permite editar detalles de usuarios existentes.
- **Características:** 
  - Formulario prellenado con la información actual del usuario.
  - Actualización de detalles del usuario en la base de datos.

### 4. Eliminar Usuario (`delete.php`)

- **Funcionalidad:** Facilita la eliminación de un usuario de la base de datos.
- **Características:** 
  - Eliminación de información de usuario basada en el ID de usuario.

## Conexión a la Base de Datos (`connect.php`)

- **Propósito:** Establece una conexión con la base de datos MySQL.
- **Credenciales:** Utiliza nombre de host, nombre de usuario, contraseña y nombre de la base de datos para la conexión.

## Cómo Ejecutar

1. Clona el repositorio en tu máquina local.
2. Configura un entorno PHP y MySQL (como XAMPP).
3. Crea la base de datos usando phpmyadmin.
4. Ejecuta la aplicación en un servidor local.

## Nota de Seguridad

Esta aplicación es una demostración básica y no implementa medidas avanzadas de seguridad. Es recomendable utilizar declaraciones preparadas (prepared statements) u ORM para las interacciones con la base de datos para prevenir ataques de inyección SQL.

---

Siéntete libre de contribuir a este proyecto o sugerir mejoras. Para cualquier consulta o problema, por favor abre un issue en este repositorio.

